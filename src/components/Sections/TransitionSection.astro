<div class='background py-20 lg:py-0'>
  <div class='container container-width'>
    <div
      class='min-h-[calc(100vh-40rem)] flex flex-col lg:flex-row items-center gap-20 lg:gap-0 justify-between'
    >
      <div
        class='stagger-fadeup z-1 flex items-center justify-center flex-col content_1'
      >
        <h1
          data-target='100'
          data-prefix='+'
          class='trigger-element'
        >
          0
        </h1>
        <h2>Proyectos</h2>
      </div>
      <div
        class='stagger-fadeup z-1 flex items-center justify-center flex-col content_2'
      >
        <h1
          data-target='5'
          data-suffix=' aÃ±os'
        >
          0
        </h1>
        <h2>Experiencia</h2>
      </div>
      <div
        class='stagger-fadeup z-1 flex items-center justify-center flex-col content_3'
      >
        <h1>Santiago</h1>
        <h2>Chile</h2>
      </div>
    </div>
  </div>
</div>

<script is:inline>
  let hasExecuted = false;
  const observer = new IntersectionObserver(
    entries => {
      entries.forEach(entry => {
        if (entry.isIntersecting && !hasExecuted) {
          hasExecuted = true;

          function animateCounter(element) {
            const target = parseInt(element.getAttribute('data-target'));
            const prefix = element.getAttribute('data-prefix') || '';
            const suffix = element.getAttribute('data-suffix') || '';
            const duration = 4000;
            const increment = target / (duration / 16);
            let current = 0;

            const timer = setInterval(() => {
              current += increment;
              if (current >= target) {
                current = target;
                clearInterval(timer);
              }
              element.textContent = prefix + Math.floor(current) + suffix;
            }, 16);
          }

          document.querySelectorAll('[data-target]').forEach(animateCounter);

          observer.disconnect();
        }
      });
    },
    { threshold: 0.3 },
  );

  const triggerElement = document.querySelector('.trigger-element');
  if (triggerElement) observer.observe(triggerElement);
</script>

<style>
  @reference 'tailwindcss';

  .background {
    @apply bg-[var(--bg-beige-opacity50)];
  }

  .container {
    @apply flex flex-col;
    @apply px-8 2xl:px-0 gap-20;
  }
</style>
